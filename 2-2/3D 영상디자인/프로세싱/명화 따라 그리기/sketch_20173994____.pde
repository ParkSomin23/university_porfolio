// 25.4 * 33 * 30
size(762, 990);
background(221, 213, 167);

//background
noStroke();
fill(116, 134, 146); //blue
rect(14.8*30, 0, 10.6*30, height);

fill(29, 56, 63); //dark blue
rect(22.8*30, 0, 3*30, height);
rect(15*30, 24*30, 300, 400);

triangle(5*30, 11.2*30, 5*30, height, width, height);

fill(182, 122, 124); //dark pink
rect(0, 0, 5*30, height);

fill(105, 84, 89); //pink
rect(0, 0, 2.6*30, height);


//box
fill(113, 71, 55);
quad(width, 18.2*30, 9.8*30, 27.8*30, 15.2*30, height, width, 26.6*30);

fill(227, 162, 68);
rect(9.8*30, 27.8*30, 5.4*30, 156);

stroke(107, 71, 57);
strokeWeight(5);
line(15.3*30, 27.7*30, width, 21.6*30);


//neck
noStroke();
fill(189, 185, 186); //grey
rect(6.565*30, 18.4*30, 14.285*30, 3.25*30);
arc(13.71*30, 21.6*30, 14.3*30, 7.5*30, 0, PI);

for (float i=0; i<1.5; i=i+0.15)
{
  fill(0, 15+i);
  rect((6.95+i)*30, 20.15*30, 3.6*30, 5.2*30);
}

for (float i=0; i<1.5; i=i+0.15)
{
  fill(19, 97, 120, 15+30*i);
  rect((14+1.4*i)*30, 20.15*30, (3.6)*30, 5.2*30); //11.8*30, 16.3*30,
}

for (float i=0; i<1.5; i=i+0.15)
{
  fill(0, 15-i);
  rect((16+1.1*i)*30, (20-i/2)*30, (4-0.5*i)*30, 5.2*30);
}

fill(1, 121, 174);
strokeWeight(1.2);
stroke(2, 67, 97);
arc(13.7*30, 18.4*30, 14.3*30, 9*30, 0, PI);
noStroke();


//face
fill(135, 150, 169);
rect(10.4*30, 330, 6.4*30, 8.4*30);
arc(13.6*30, 330+8.4*30, 6.4*30, 3.4*30, 0, PI);

for (float i=0; i<2; i=i+0.1)
{
  fill(0, 10+i);
  rect((11.25+i)*30, 330, (4.4-i)*30, 10.4*30);
}

for (float i=0; i<0.3; i+=0.1)
{
  fill(0, 60-i);
  rect((15.66-i)*30, 330, (0.6-i)*30, 10.4*30);
}

for (float i=0; i<0.5; i+=0.085)
{
  fill(0, 119, 172, 60-i);
  rect((15.8-i)*30, 330, (1-i)*30, 10.4*30);
}

noFill();
stroke(1, 121, 174);
strokeWeight(30);
arc(13.6*30, 330.5+8.4*30, 7.4*30, 4.38*30, 0, PI);
noStroke();


//eyes
fill(93, 89, 90);
ellipse(11.25*30, 12.7*30, 0.9*30, 1.47*30);
rect(9.8*30, 11.95*30, 1.5*30, 1.48*30);

ellipse(14.85*30, 12.7*30, 0.9*30, 1.47*30);
rect(13.6*30, 11.95*30, 1.33*30, 1.48*30);

for (float i = 0; i <0.4; i+=0.06)
{
  fill(255, 60+i);
  rect(9.8*30, (12.3+i)*30, (1.825+i/5.2)*30, 0.26*30);
}

for (float i = 0; i <0.16; i+=0.05)
{
  fill(255, 60+i);
  rect(9.8*30, (13.25+i)*30, (1.7-1.6*i)*30, (0.12-i/2)*30);
}

for (float i = 0; i <0.4; i+=0.06)
{
  fill(255, 60+i);
  rect(13.6*30, (12.3+i)*30, (1.62+i/5.4)*30, 0.26*30);
}

for (float i = 0; i <0.16; i+=0.06)
{
  fill(255, 50+i);
  rect(13.6*30, (13.25+i)*30, (1.53-1.6*i)*30, (0.1-i/8)*30);
}

for (float i = 0; i <0.16; i+=0.035)
{
  fill(67, 149, 171, 110+i);
  rect(9.8*30, (11.94+i)*30, (1.5+i)*30, (0.05-i)*30);
}

for (float i = 0; i <0.16; i+=0.035)
{
  fill(67, 149, 171, 90+i);
  rect(13.6*30, (11.95+i)*30, (1.33+i)*30, (0.05-i)*30);
}

fill(227, 162, 68); //yellow
ellipse(9.8*30, 12.7*30, 1.2*30, 1.5*30); 
ellipse(13.6*30, 12.7*30, 1.2*30, 1.5*30); 


//mouth
fill(93, 89, 90); //grey
rect(11.8*30, 15.25*30, 1.6*30, 2.1*30);
ellipse(13.4*30, 16.3*30, 1.2*30, 2.1*30);

for (float i = 0; i <0.4; i+=0.1)
{
  fill(255, 60+i);
  rect(11.8*30, (15.8+i)*30, (2.16+i/12)*30, 0.6*30);
}

for (float i = 0; i <0.4; i+=0.06)
{
  fill(255, 60+i);
  rect(11.8*30, (17.1+i)*30, (1.9-i)*30, (0.11-i*0.35)*30);
}

for (float i = 0; i < 10; i++)
{
  fill(67, 149, 171, 40+i);
  rect(11.8*30, (15.25+i*0.005)*30, (1.256+i*0.072)*30, (0.12-0.01*i)*30);
}

fill(227, 162, 68); //yellow
ellipse(11.8*30, 16.3*30, 1.7*30, 2.1*30);


//pole
fill(93, 89, 90); //grey
ellipse(11.8*30, 16.3*30, 0.4*30, 0.6*30);
rect(8.8*30, 16*30, 3*30, 0.6*30);

for (float i = 0; i < 10; i++)
{
  fill(255, 60+i);
  rect(8.8*30, (16.5+0.01*i)*30, (3.2-0.1*i)*30, (0.1-0.02*i)*30);
}

for (float i = 0; i < 10; i++)
{
  fill(67, 149, 171, 40+i);
  rect(8.8*30, (16.04-i*0.005)*30, (3.09-i*0.015)*30, (0.12-0.01*i)*30);
}

fill(191, 193, 192);//grey
triangle((8.3-1.35)*30, 14.1*30, (8.3+1.35)*30, 14.1*30, 8.3*30, 17.6*30);
triangle((8.3-1.35)*30, 18.1*30, (8.3+1.35)*30, 18.1*30, 8.3*30, 15*30);

for (float i=0; i < 20; i++)
{
  stroke(114, 170, 183, 150+2*i);
  strokeWeight(3-0.05*i);
  line((9.54-0.01*i)*30, 14.15*30, 8.85*30, 16.3*30);
  line((9.54-0.01*i)*30, 18*30, 8.85*30, 16.3*30);
}

for (float i=0; i < 20; i++)
{
  stroke(68, 143, 164, 150+2*i);
  strokeWeight(4-0.08*i);
  line((9.34-0.01*i)*30, 14.18*30, 8.75*30, 16.3*30);
  line((9.34-0.01*i)*30, 18*30, 8.75*30, 16.3*30);
}

for (float i=0; i < 20; i++)
{
  stroke(34, 76, 90, 150+2*i);
  strokeWeight(6-0.08*i);
  line((9.14-0.01*i)*30, 14.2*30, 8.55*30, 16.3*30);
  line((9.14-0.01*i)*30, 18*30, 8.55*30, 16.3*30);
}
noStroke();

for (float i=0; i<0.6; i+=0.05)
{
  fill(0, 20+i);
  rect((8.1+i)*30, 14.1*30, (0.81-i)*30, 4*30);
}

stroke(34, 76, 90, 150+2);
strokeWeight(4);
line((8.3-1.3)*30, 14.1*30, 7.75*30, 16.1*30);
noStroke();


//hat
fill(1, 121, 174); //blue
rect(9.75*30, 8.25*30, 230, 75);

fill(189, 189, 191); //grey
arc(13.6*30, 10.2*30, 8.8*30, 2.6*30, 0, PI);
rect(9.213*30, 9*30, 8.768*30, 1.4*30);

for (float i=0; i<1.5; i=i+0.15)
{
  fill(0, 15+1.5*i);
  rect((9.6+i/1.3)*30, 9*30, 1.6*30, 2.6*30);
}

for (float i=0; i<1.5; i=i+0.15)
{
  fill(19, 97, 120, 15+30*i);
  rect((12.5+1.4*i)*30, 9.3*30, 3.4*30, 2.3*30); //11.8*30, 16.3*30,
}


fill(1, 121, 174);
arc(13.6*30, 9*30, 8.8*30, 3.2*30, (2-0.16)*PI, (3+0.16)*PI);

fill(108, 169, 174); //mint
rect((13.6-1.7)*30, (9-3.6)*30, 3.4*30, 3.6*30);
triangle(11.9*30, 5.4*30, 10.9*30, 6.4*30, 11.9*30, 7.45*30); //LU
triangle(11.9*30, 7.45*30, 11*30, 8.05*30, 11.9*30, 9*30); //LD
triangle(15.3*30, 5.4*30, 16.3*30, 6.4*30, (11.9+3.4)*30, 7.45*30); //RU
triangle(15.3*30, 7.45*30, (5.4+10.9)*30, 8.05*30, (3.4+11.8)*30, 9*30); //RD

stroke(52, 104, 102);
strokeWeight(1.2);
line(11.9*30, 7.45*30, 15.3*30, 7.45*30);

fill(57, 114, 108);  //dark mint
quad(10.9*30, 6.4*30, 11.9*30, 7.45*30, 15.3*30, 7.45*30, 16.3*30, 6.4*30);
quad(11*30, 8.05*30, 11.9*30, 9*30, (3.4+11.8)*30, 9*30, (5.4+10.9)*30, 8.05*30);

noStroke();
fill(122, 125, 132); //grey
rect((13.6-0.75)*30, 6.02*30, 1.5*30, 3.4*30);

for (float i = 0; i <0.4; i+=0.1)
{
  fill(255, 60+i);
  rect((13.6-0.75)*30, (6.35+i)*30, 1.5*30, 1*30);
}

for (float i = 0; i <0.4; i+=0.1)
{
  fill(20, 30+i);
  rect((13.6-0.75)*30, (7.8+i)*30, 1.5*30, 0.8*30);
}

for (float i = 0; i <0.4; i+=0.06)
{
  fill(255, 15+i);
  rect((13.6-0.75)*30, (8.42+i)*30, 1.5*30, (1-i)*30);
}

for (float i = 0; i < 9; i++)
{
  fill(111, 163, 176, 150-i);
  rect((13.6-0.75)*30, (5.8+i*0.05)*30, 1.5*30, 0.058*30);
}


//ear
fill(122, 125, 132);
rect(15.3*30, 13.43*30, 1.5*30, 3.92*30);
arc(16.5*30, 15.39*30, 2.3*30, 3.92*30, PI*3/2, 5*PI/2);

for (float i = 0; i <0.4; i+=0.1)
{
  fill(255, 60+i);
  rect((15.6)*30, (14+i)*30, (2.05)*30, 0.8*30);
}

for (float i = 0; i <0.4; i+=0.06)
{
  fill(255, 60+i);
  rect(15.7*30, (16.5+2*i)*30, (1.7-i*1.5)*30, (0.2-i*0.35)*30);
}

for (float i = 0; i < 10; i++)
{
  fill(67, 149, 171, 40+i);
  rect(15.3*30, (13.43+i*0.005)*30, (1.2+i*0.055)*30, (0.4-0.01*i)*30);
}

fill(227, 162, 68);
arc(15.3*30, 15.39*30, 2.8*30, 3.92*30, PI*3/2, 5*PI/2);


//line
stroke(17, 122, 169);  //blue
strokeWeight(25);
strokeCap(PROJECT);

noFill();
arc(17.2*30, 14*30, 3.6*30, 3.8*30, 1.64*PI, 2.64*PI);
arc(19.6*30, 12.5*30, 4.4*30, 5.4*30, 1.63*PI, 3*PI);
arc(21.4*30, 12*30, 3.5*30, 4*30, 0.5*PI, 1.35*PI);
line(21.4*30, 14*30, 22.4*30, 14*30);

strokeWeight(1);
fill(17, 122, 169);
ellipse(17.5*30, 12.2*30, 30, 30);
strokeCap(ROUND);

stroke(255, 180);  //white
strokeWeight(6);
noFill();
arc(17.2*30, 14*30, 3*30, 3.1*30, 2.25*PI, 2.7*PI);

arc(17.2*30, 14*30, 4.2*30, 4.4*30, 1.6*PI, 2.115*PI);

arc(19.6*30, 12.5*30, 3.8*30, 4.8*30, 2.3*PI, 3*PI);
arc(21.4*30, 12*30, 4.15*30, 4.5*30, 0.75*PI, 1.3*PI);
arc(21.4*30, 12*30, 3*30, 3.5*30, 0.6*PI, 1.2*PI);
line(21.4*30, 13.7*30, 22.75*30, 13.7*30);

stroke(83, 107, 131, 250);  //grey
strokeWeight(16);
noFill();
strokeCap(PROJECT);
arc(17.2*30, 14*30, 3.6*30, 3.8*30, 2.28*PI, 2.67*PI);
arc(17.2*30, 13.9*30, 3.35*30, 3.9*30, 1.55*PI, 2.05*PI);
arc(19.6*30, 12.5*30, 4.4*30, 5.4*30, 1.63*PI, 3*PI);
arc(21.4*30, 12.1*30, 3.6*30, 3.4*30, 0.5*PI, 1.35*PI);
line(21.5*30, 13.8*30, 22.6*30, 13.8*30);


stroke(22, 71, 88, 200);  //dark blue
strokeWeight(5);
noFill();
arc(17.2*30, 14*30, 4.2*30, 4.45*30, 2.22*PI, 2.69*PI);
arc(19.6*30, 12.5*30, 5*30, 6.05*30, 1.95*PI, 3*PI);

//clean
strokeWeight(40);
stroke(29, 56, 63);
arc(13.71*30, 21.6*30, 16*30, 8.8*30, PI/1.6, 0.9*PI);

stroke(113, 71, 55);
arc(13.71*30, 21.6*30, 16*30, 8.7*30, 0, PI/2.1);
//fill(113, 71, 55);
